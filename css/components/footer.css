:root {
  --color-black: hextorgb(#222);
  --color-white: hextorgb(#fff);
  --color-accent: hextorgb(#cbcbcb);
}

.dark-mode {
  --color-black: hextorgb(#fff);
  --color-white: hextorgb(#222);
  --color-accent: hextorgb(#cbcbcb);
}

@media (prefers-color-scheme: dark) {
  :root {
    --color-black: hextorgb(#fff);
    --color-white: hextorgb(#222);
    --color-accent: hextorgb(#cbcbcb);
  }
}
.footer {
  background-color: #101828;
}
.footer__wrapper {
  padding-top: 60px;
  color: #EAECF0;
}
.footer__top {
  min-height: 210px;
  margin-bottom: 64px;
  display: flex;
}
.footer__lists {
  flex: 1 1 auto;
  display: flex;
  flex-wrap: wrap;
  gap: 32px;
}
.footer__content {
  font-size: 1rem;
  flex: 0 1 320px;
  margin-right: 32px;
  min-height: 210px;
}
.footer__logo-link {
  margin-bottom: 30px;
}
.footer__list {
  flex: 0 1 180px;
}
.footer__bottom {
  display: flex;
  flex-wrap: wrap;
  gap: 30px;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 45px;
}
.footer__bottom-copyright {
  color: #98A2B3;
  font-size: 1rem;
}

@media only screen and (max-width: 780px) {
  .footer__top {
    display: block;
  }
}
@media only screen and (max-width: 570px) {
  .footer__content {
    display: flex;
    gap: 30px;
    min-height: 120px;
  }
  .footer__content p {
    max-width: 320px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */