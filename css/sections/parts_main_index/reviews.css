:root {
  --color-black: hextorgb(#222);
  --color-white: hextorgb(#fff);
  --color-accent: hextorgb(#cbcbcb);
}

.dark-mode {
  --color-black: hextorgb(#fff);
  --color-white: hextorgb(#222);
  --color-accent: hextorgb(#cbcbcb);
}

@media (prefers-color-scheme: dark) {
  :root {
    --color-black: hextorgb(#fff);
    --color-white: hextorgb(#222);
    --color-accent: hextorgb(#cbcbcb);
  }
}
/* stylelint-disable */
.reviews {
  padding: 96px 0;
  background-color: #F0FAF7;
}
.reviews__slide {
  color: #101828;
  line-height: 1.55;
  text-align: center;
}
.reviews__logo {
  margin: 0 auto 32px;
}
.reviews__content {
  margin-bottom: 32px;
  font-size: 46px;
  line-height: 1.25;
  font-family: "interMedium", sans-serif;
}
.reviews__avatar {
  margin: 0 auto 16px;
}
.reviews__name {
  margin-bottom: 4px;
  font-size: 1.125rem;
  font-family: "interMedium", sans-serif;
}
.reviews__position {
  color: #667085;
}
.reviews .slick-dots li button:before {
  position: absolute;
  top: 30px;
  width: 12px;
  height: 12px;
  color: transparent;
  background-color: #D9D9D9;
  border-radius: 6px;
  opacity: 1;
  content: "";
}
.reviews .slick-dots li.slick-active button:before {
  width: 48px;
  background-color: #4AC8AE;
}
.reviews .slick-dots li.slick-active:not(:last-child) {
  padding-left: 60px;
}
.reviews .slick-slide {
  margin: 0 0;
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */